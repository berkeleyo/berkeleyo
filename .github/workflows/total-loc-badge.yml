
name: total-loc-badge
on:
  schedule:
    - cron: '17 2 * * *'  # daily
  workflow_dispatch: {}

jobs:
  count-loc:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout profile repo (this repo)
        uses: actions/checkout@v4

      - name: Install tokei
        run: |
          curl -sSL https://github.com/XAMPPRocky/tokei/releases/latest/download/tokei-x86_64-unknown-linux-gnu.tar.gz -L -o tokei.tar.gz
          tar -xzf tokei.tar.gz
          sudo mv tokei /usr/local/bin/tokei

      - name: Fetch all public repos for user
        id: list
        uses: actions/github-script@v7
        with:
          script: |
            const username = 'berkeleyo';
            const per_page = 100;
            let page = 1;
            let repos = [];
            while (true) {
              const { data } = await github.rest.repos.listForUser({ username, per_page, page, sort: 'updated' });
              if (!data.length) break;
              repos = repos.concat(data.filter(r => !r.fork && r.private === false).map(r => r.clone_url));
              page++;
            }
            core.setOutput('repos', JSON.stringify(repos));

      - name: Clone all repos shallow
        run: |
          mkdir -p tmp_repos
          python3 - << 'PY'
import json, os, subprocess
repos = json.loads(os.environ['REPOS'])
for url in repos:
    name = url.split('/')[-1].replace('.git','')
    dest = f"tmp_repos/{name}"
    subprocess.run(['git','clone','--depth','1',url,dest], check=False)
PY
        env:
          REPOS: ${{ steps.list.outputs.repos }}

      - name: Run tokei across repos
        run: |
          tokei tmp_repos -o json > loc.json
          python3 - << 'PY'
import json
data = json.load(open('loc.json'))
total = 0
for k,v in data.items():
    if isinstance(v, dict) and 'code' in v:
        total += int(v['code'])
badge = {
  "schemaVersion": 1,
  "label": "Total Lines of Code",
  "message": f"{total:,}",
  "color": "blue"
}
open('loc-badge.json','w').write(json.dumps(badge))
print(f"TOTAL_CODE_LINES={total}")
PY

      - name: Commit badge JSON
        run: |
          mv loc-badge.json ./
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add loc-badge.json
          git commit -m "chore(badge): update total lines of code badge" || echo "No changes"
          git push
